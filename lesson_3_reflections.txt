# When would you like to create a remote repository rather than keeping 
all your work local?

To have a back-up other than my local location, to collaborate with 
other people.

Why might you want to always pull changes manually rather than having 
Git automatically stay up-to-date with your remote repository?

Same reasons we discussed earlier regarding manual or automatic saving.
Maybe you don't want some changes to be pulled right away, maybe you
don't want to have that many files automatically created and there,
etc.

Describe the differences between forks, clones, and branches. 
When would you use one instead of another?

Forks are only available when using Github. They are used to copy other
coders work. Clones can be done as a way to save locally things forked
from Github or other sources. Branches are modifications done to an
original document (the master for example). They are useful for trying
new features.

What is the benefit of having a copy of the last known state of the 
remote stored locally?

It's an updated back up.

When would you want to make changes in a separate branch rather than 
directly in master? What benefits does each approach have?

As said, the workflow when making changes in a separate branch is more 
complicated than working directly in master, especially when you need 
to stay up-to-date with changes others are making. Rather than simply 
pulling and pushing, you need to pull changes into your local master 
branch, merge the local master into your branch (different-oil, in our 
case), then push your branch to the remote before finally merging your 
branch into master, either locally or on GitHub.
But working in a separate branch keeps thing better organized when
collaborating with other people.